<?php
use Contao\Config;
use Alnv\ContaoTranslationManagerBundle\Library\Translation;
?>
<?php if (is_array($this->locations) && !empty($this->locations)): ?>
    <?php $strUniqueId = 'map_' . uniqid(); ?>
    <div id="<?= $strUniqueId ?>" class="map-view gmap" style="height:400px;width:100%">
        <button><?= Translation::getInstance()->translate('map.button.dsgvo', 'Datenschutzbestimmungen zustimmen') ?></button>
    </div>
    <script defer>
        let getInfoCallback = function (map, content) {
            let objInfoBox = new google.maps.InfoWindow({content: content});
            return function () {
                objInfoBox.setContent(content);
                objInfoBox.open(map, this);
            };
        };
        var initMap = initMap || function () {
            let arrLocations = <?= $this->varLocations ?>;
            let objMapOptions = {};
            if (arrLocations.length<2) {
                objMapOptions.maxZoom = 13;
            }
            let objMap = new google.maps.Map(document.getElementById("<?= $strUniqueId ?>"), objMapOptions);
            let objBounds = new google.maps.LatLngBounds();
            if (typeof arrLocations === 'undefined' || !arrLocations.length) {
                return null;
            }
            for (let i = 0; i < arrLocations.length; i++) {
                if (!arrLocations[i]['map']['latitude'] || !arrLocations[i]['map']['longitude']) {
                    continue;
                }
                let strTemplate = arrLocations[i]['map']['infoContent'];
                let objPosition = new google.maps.LatLng(arrLocations[i]['map']['latitude'], arrLocations[i]['map']['longitude']);
                let objMarker = new google.maps.Marker({
                    title: arrLocations[i]['map']['title'],
                    position: objPosition,
                    map: objMap
                });
                google.maps.event.addListener(objMarker, 'click', getInfoCallback(objMap, strTemplate));
                objBounds.extend(objPosition);
            }
            objMap.fitBounds(objBounds);
        };
        (function () {
            let objMapDocument = document.getElementById("<?= $strUniqueId ?>");
            let loadGMap = function () {
                if (typeof google !== 'undefined') {
                    initMap();
                    return null;
                }
                let objScript = document.createElement('script');
                objScript.src = 'https://maps.googleapis.com/maps/api/js?key=<?= Config::get('googleMapsApiKey') ?>&callback=initMap';
                objScript.id = "script_<?= $strUniqueId ?>";
                document.body.appendChild(objScript);
            };
            let objDataProtectionButton = objMapDocument.querySelector('button');
            if (objDataProtectionButton && !localStorage.getItem('data-protection-gmap-accepted')) {
                objDataProtectionButton.addEventListener('click', function () {
                    loadGMap();
                    localStorage.setItem('data-protection-gmap-accepted', '1')
                }, false);
            } else {
                loadGMap();
            }
        })();
    </script>
<?php endif; ?>